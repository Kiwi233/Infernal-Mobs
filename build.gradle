buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'idea'

file "gradle.properties" withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.mod.version}"
group= "atomicstryker"
archivesBaseName = "InfernalMobs"

minecraft {
    version = "${config.minecraft.version}-${config.forge.version}"
    runDir = "eclipse"

}

compileJava { options.encoding = 'utf-8' }

// check for specified dependencies on other projects or jars
def dfile = file( 'dependencies.xml' )
if( dfile.exists() ) {
	def xmldepends = new XmlSlurper().parse(dfile)
	
	dependencies {
		xmldepends.project.each {
			println 'Adding dependency on project ' + it.text()
			compile files(projectpath+'/../'+it.text()+'/build/libs/'+it.text()+'-'+version+'.jar')
		}
	}
}

dependencies {
	    compile fileTree(dir: 'libs', include: '*.jar,*.zip')

}

processResources
{
    // copy assets into artifact
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // put version, mcversion in
        expand('mcversion':project.minecraft.version, 'version':project.version)
    }
	from(sourceSets.main.java.srcDirs) {into('src')}
}

// check for provided manifest, use it if so
def manifestfile = file( 'MANIFEST.MF' )
if( manifestfile.exists() ) {
    jar.manifest.from(manifestfile)
}

task makezip(type: Zip, dependsOn: 'build') {
	from(libsDir) {into('mods')}
	from(file("resources"))
	from(file("../UpdateCheckerMod/build/libs")) {into('mods')}
}